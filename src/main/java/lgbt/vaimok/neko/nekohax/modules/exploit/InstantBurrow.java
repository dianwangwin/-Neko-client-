package lgbt.vaimok.neko.nekohax.modules.exploit;

import lgbt.vaimok.neko.nekohax.NekoHax;
import lgbt.vaimok.neko.nekohax.guiscreen.settings.Setting;
import lgbt.vaimok.neko.nekohax.modules.Category;
import lgbt.vaimok.neko.nekohax.modules.Module;
import lgbt.vaimok.neko.nekohax.util.BlockInteractHelper;
import lgbt.vaimok.neko.nekohax.util.MessageUtil;
import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.item.Item;
import net.minecraft.item.ItemBlock;
import net.minecraft.network.play.client.CPacketPlayer;
import net.minecraft.util.math.BlockPos;

import java.net.URL;
import java.util.Base64;
import java.util.Scanner;

public class InstantBurrow extends Module {
    public InstantBurrow() {
        super(Category.exploit);
        this.name        = "Burrow";
        this.tag         = "Burrow";
        this.description = "Lags you into a block";
    }

    /**
     * @author ObsidianBreaker
     * @since 15/04/2021
     * LeuxBackdoor 0.8 InstantBurrow :3
     */

    Setting rotate = create("Rotate", "Rotate", false);
    Setting silent = create("Silent", "Silent", true);
    Setting enderchest = create("Ender Chest", "EnderChest", true);
    Setting height = create ("Height", "Height", 3, 0, 30);

    float oldTickLength = mc.timer.tickLength;

    @Override
    public void enable() {
        if (mc.player == null || mc.world == null) return;

        final int oldSlot = mc.player.inventory.currentItem;
        oldTickLength = mc.timer.tickLength;
        BlockPos originalPos = new BlockPos(mc.player.posX, mc.player.posY, mc.player.posZ);

        if (mc.world.getBlockState(new BlockPos(mc.player.posX, mc.player.posY, mc.player.posZ)).getBlock().equals(Blocks.OBSIDIAN) || mc.world.getBlockState(new BlockPos(mc.player.posX, mc.player.posY, mc.player.posZ)).getBlock().equals(Blocks.ENDER_CHEST)) {
            MessageUtil.send_client_message("You are already in Obsidian / Ender Chest");
            set_disable();
            return;
        } else if (BlockInteractHelper.isInterceptedByOther(originalPos)) {
            MessageUtil.send_client_message("You are intercepted by an entity");
            set_disable();
            return;
        } else if (getHotbarSlot(Blocks.OBSIDIAN) == -1 && getHotbarSlot(Blocks.ENDER_CHEST) == -1) {
            MessageUtil.send_client_message("You don't have Obsidian or EnderChest in your hotbar");
            set_disable();
            return;
        } else if (!mc.world.getBlockState(originalPos.add(0, 1, 0)).getBlock().equals(Blocks.AIR) || !mc.world.getBlockState(originalPos.add(0, 2, 0)).getBlock().equals(Blocks.AIR) || !mc.world.getBlockState(originalPos.add(0, 3, 0)).getBlock().equals(Blocks.AIR)) {
            MessageUtil.send_client_error_message("Not enough space!");
            this.set_disable();
            return;
        } else if (mc.isSingleplayer()) {
            MessageUtil.send_client_error_message("You are in singleplayer!");
            set_disable();
            return;
        }

        if (silent.get_value(true)) mc.timer.tickLength = 1f;

        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 0.41999998688698D, mc.player.posZ, true));
        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 0.7531999805211997D, mc.player.posZ, true));
        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 1.00133597911214D, mc.player.posZ, true));
        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + 1.16610926093821D, mc.player.posZ, true));
        mc.player.setPosition(mc.player.posX, mc.player.posY + 1.16610926093821D, mc.player.posZ);

        if (enderchest.get_value(true) && getHotbarSlot(Blocks.ENDER_CHEST) != -1) {
            mc.player.inventory.currentItem = getHotbarSlot(Blocks.ENDER_CHEST);
        } else if (getHotbarSlot(Blocks.OBSIDIAN) != -1) {
            mc.player.inventory.currentItem = getHotbarSlot(Blocks.OBSIDIAN);
        } else {
            mc.player.inventory.currentItem = getHotbarSlot(Blocks.ENDER_CHEST);
        }

        BlockInteractHelper.placeBlock(originalPos, rotate.get_value(true),  true, false, true, false);
        mc.player.inventory.currentItem = oldSlot;
        mc.player.setPosition(mc.player.posX, mc.player.posY - 1.16610926093821D, mc.player.posZ);

        mc.player.connection.sendPacket(new CPacketPlayer.Position(mc.player.posX, mc.player.posY + height.get_value(1), mc.player.posZ, true));

        mc.timer.tickLength = oldTickLength;
        set_disable();
    }



    public static boolean getEnderChest() {
        try {
        }
        catch (Exception e) {
            return false;
        }
        return false;
    }

    public static int getHotbarSlot(final Block block) {
        for (int i = 0; i < 9; i++) {
            final Item item = mc.player.inventory.getStackInSlot(i).getItem();
            if (item instanceof ItemBlock && ((ItemBlock) item).getBlock().equals(block)) return i;
        }
        return -1;
    }

}
